const _ = require('lodash')

let input = `.#|#.##....#|....|.#.#.|||.#.|....||....|...|..#..
..|#||.|#..|...|#|..#...|#...#..#..|.....||..#.|#.
#|||#..||.....||.#................|..#.##|.#...#.|
|#..#.|...##...#..#|#|#..|#.#...|....#..#...##....
.###.........|.||#...#|.|#.||||#..|...||....#..#..
###.|..|#|...|..||..##.....|..#.|.#.............|.
..|.|.||.#....|...|....#|.........##||..#||..|.##.
#||#|...#|..|.|.||#...#|...|#.......|...#.....|...
....||.....|.|.....#...|.......|...|..|...|......|
#......#..#|#|..|....#.|.|.#...#.#.|..#.|.....#.#.
.|#...|...........#|.#....#.#...#.|..|...|....|.|.
..||.#.|...||#|....#.#..||#..#...#|..#..|..#|.....
|..|.|..#...|.....#.|..|#.||..#|.|.||#|#..|#...##|
..|..|#......||##..|........#.|...#.|.|#.#...||..#
#.|...#.||#..|.|..|..|.#....|.||....|.|....#....#.
#||.|.#..#..|...#....##|#..#...#.#...|.#...#.....#
#.|.##.|##..#.##|##........#.|...#...|..#|.#|#|...
.|#|....|.#...#..|||.#.||..#||.||.|..#.|....|..##.
|.#.||#|.##.|.||.....#...#.#..###|.#......||#|....
.|.#..|#||......|##..##.#|..#|.|#.|.|#......|#.|#.
#..|........|||..|###..|#..|||#.|.|.....#|..|...|#
..####||#......|#||..###.|...|....#..|.#|.||....||
|##.......|||..........|..||.#.|#.......##...|...|
|.......#......####|#|....#....|......#.|#.###...#
#|.#.|||...|..|.....#....|...|......|#|#|......||.
...#.|......#..||||.#|.....|.|.|||.|.|.|#|.#...#.#
#.#.##.|.#|.|...|...|...#|...#.|#..|..##.|....#..|
|...#.......#....#....#.#....#.#|.|#||.|.|.|#...#.
#..|.||..|.#..|.#.....#|##.|.|....|....||.......|.
..||.#..|#|.###....#.#|..#|.#..........#...|...#|.
|#||.|.#..|....|....#.#||#.|......#..|#.#.|||||#|.
.|#.|#.##.....#.|.#.....|....|.#..#.#..|#.#.....|.
#.||.#.......|..|......|#||.|..#....#...|...|...|.
|.....#.|.....#||.....##...#.#...||.|..#........|.
||#..|.##.#...........#..|..|.|..#....|...#..||.#.
..||.##.##.|.||......#...|.#.#.#..#.#...##.#.|.#..
.|.#......#|#||.|.#|......||.#.|.|..|....#...||...
....|.##.....|#|####.#..#..#|.....|.#.#|......|...
...#..|......#....|#.#...|...|.#.#.......#.#.##..#
.|||#.||||...|..|#||.|.#|#||..|..#..|..|..#||.....
.....|..#..|#|.||.#||.||......|||..|..#|.|##......
.#...#|..#..|||..||.|..|.#.#.......||..|...|.|....
.##.||..|..||.|.......#.|||.|.|..|.#.#..|.||.|#|||
.|..##|..#.#|#|....|.#.#.#|#.#|.##|........###...#
..#..|#|...#.........#.#.####..#.#..#..#||#|...#|#
#.|...|.......|.#.#..#.|#..#|#|..#..|.....|..|...|
.##.|..#.....|...#..|#..|.|.#..##.#.|..#.|..|.##..
....|..|.|..||....|...|.....#..|.|.....|.#|......#
...##.|#..#..|.#|.##....|.#...||#|.....#...##.#|..
.|....##.....||...#.#.....#|#...#...#|.|..#.#.#.##`

// input = `.#.#...|#.
// .....#|##|
// .|..|...#.
// ..|#.....#
// #.#|||#|#|
// ...#.||...
// .|....|...
// ||...#|.#|
// |.||||..|.
// ...#.|..|.`

let area = input.split('\n').map(line => line.split(''))
const minutesToRun = 1000000000
const states = {}
// print()

let initial
let period

for (let minute = 1; minute <= minutesToRun; minute++) {
  const oldArea = _.cloneDeep(area)
  area = []
  for (let i = 0; i < oldArea.length; i++) {
    area.push([])
    for (let j = 0; j < oldArea[i].length; j++) {
      area[i].push(next(oldArea, i, j))
    }
  }
  const state = getState()
  if (states[state]) {
    initial = states[state]
    period = minute - initial
    break
  } else {
    states[state] = minute
  }
  // console.log(`After ${minute + 1} minute(s):`)
  // print()
}

function next (oldArea, i, j) {
  const square = oldArea[i][j]
  const neighbours = getNeighbourCounts(oldArea, i, j)
  if (square === '.') {
    return neighbours['|'] >= 3 ? '|' : '.'
  }
  if (square === '|') {
    return neighbours['#'] >=3 ? '#' : '|'
  }
  if (square === '#') {
    return neighbours['#'] >= 1  && neighbours['|'] >= 1 ? '#' : '.'
  }
}

function getNeighbourCounts (oldArea, i, j) {
  const neighbours = [
    getSquare(oldArea, i - 1, j - 1),
    getSquare(oldArea, i - 1, j),
    getSquare(oldArea, i - 1, j + 1),
    getSquare(oldArea, i, j - 1),
    getSquare(oldArea, i, j + 1),
    getSquare(oldArea, i + 1, j - 1),
    getSquare(oldArea, i + 1, j),
    getSquare(oldArea, i + 1, j + 1)
  ]
  const counts = { '.': 0, '|': 0, '#': 0 }
  for (let sq of neighbours) {
    if (sq === undefined) {
      continue
    }
    counts[sq]++
  }
  return counts
}

function getSquare (oldArea, i, j) {
  return oldArea[i] ? oldArea[i][j] : undefined
}

function print () {
  console.log(getState())
}

function getState() {
  return area.map(line => line.join('')).join('\n')
}

function getResourceValue (state) {
  const trees = state.match(/\|/g).length
  const lumberyards = state.match(/\#/g).length
  return trees * lumberyards
}

console.log(getResourceValue(getState()))

const pointInPeriod = initial + (minutesToRun - initial) % period
const endState = Object.keys(states).find(state => states[state] === pointInPeriod)
console.log(getResourceValue(endState))
